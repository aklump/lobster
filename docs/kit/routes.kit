
<!--$prev_id = php-->
<!--$prev = php.html-->
<!--$prev_title = Php-->
<!--$id = routes-->
<!--$title = Routes-->
<!--$file = routes.html-->
<!--$next_id = search--results-->
<!--$next = search--results.html-->
<!--$next_title = Results-->
<!--$classes = page-routes-->
<!--$date = Mon, 30 May 2016 17:31:32 -0700-->
<!--$version = 1.0-->
<!--$search = true-->
<!--$search_results_page = false-->
<!-- @include ../core/tpl/header.kit -->
<h1>Routing</h1>

<h2>Route files</h2>

<ol>
<li>Place script files in <code>/routes</code> folder of your app.</li>
<li>Configure the types and order of files via <code>$lobster_route_extensions</code>.</li>
<li>If a route cannot be found, then a tpl will be sought.</li>
<li>Core routes can be overridden, e.g. 'init'</li>
</ol>

<h2>Theme tpls</h2>

<ol>
<li>You may have more than one theme, but not more than one <em>active</em> theme.</li>
<li>Configure the types and order of files via <code>$lobster_tpl_extensions</code>.</li>
<li>Place tpl files in <code>/themes/{lobster_theme}/tpl</code></li>
</ol>

<h2>The Route/Theme Cascade</h2>

<p>Given that a user types:</p>

<pre><code>$ my_app.sh do re mi
</code></pre>

<p>Then the first existing file from in the following list will be used:</p>

<pre><code>/routes/do.re.mi.sh
/routes/do.re.mi.php
/routes/do.re.sh
/routes/do.re.php
/routes/do.sh
/routes/do.php
/themes/{lobster_theme}/tpl/do.re.mi.twig
/themes/{lobster_theme}/tpl/do.re.mi.txt
/themes/{lobster_theme}/tpl/do.re.twig
/themes/{lobster_theme}/tpl/do.re.txt
/themes/{lobster_theme}/tpl/do.twig
/themes/{lobster_theme}/tpl/do.txt
</code></pre>

<h2>Route options</h2>

<p>You can pass options to routes in two ways: flags and parameters.</p>

<p>Here is an example of a route with a parameter+value:</p>

<pre><code>app op --color=red
</code></pre>

<p>.. It is not necessary for a param to have a value:</p>

<pre><code>app op --debug
</code></pre>

<p>Here are examples with two flags, with identical effect:</p>

<pre><code>app op -v -d
app op -vd
</code></pre>

<h3>Route flags</h3>

<ul>
<li>A flag is an argument that begins with a single <code>-</code>, e.g. <code>-v</code>.</li>
<li>A flag cannot have a value (see parameter)</li>
<li>Flags must be single characters.</li>
<li>Flags may be grouped like this <code>-asdf</code>, which signifies four flags.</li>
</ul>

<h3>Route parameters</h3>

<ul>
<li>A parameter is an argument that begins with a double hyphen, e.g., '--verbose'</li>
<li>It may have a value assigned, e.g., <code>--file=my_file.txt</code></li>
</ul>

<h3>Option order is irrelevent</h3>

<p>Lobster doesn't care the order of the args, flag or params.  All of the following have the same effect:</p>

<pre><code>app arg1 -abcd --param=value arg2 arg3
app -abcd --param=value arg1 arg2 arg3
app --param=value arg1 -abcd  arg2 arg3
...
</code></pre>

<h2>Internal Routes</h2>

<p>Sometimes you may want to call a route within a route; you will use --lobster-quiet to suppress theme output.  Do something like this:</p>

<pre><code>$LOBSTER_APP {route} -f --lobster-nowrap
</code></pre>
<!-- @include ../core/tpl/footer.kit -->
